<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>docker - Tag - DrosoCode</title><link>https://thomasz.me/tags/docker/</link><description>docker - Tag - DrosoCode</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><managingEditor>contact@thomasz.me (droso)</managingEditor><webMaster>contact@thomasz.me (droso)</webMaster><lastBuildDate>Fri, 14 Jan 2022 00:00:00 +0100</lastBuildDate><atom:link href="https://thomasz.me/tags/docker/" rel="self" type="application/rss+xml"/><item><title>A comparison of upscaling software in 2021</title><link>https://thomasz.me/2022/01/14/a-comparison-of-upscaling-software-in-2021/</link><pubDate>Fri, 14 Jan 2022 00:00:00 +0100</pubDate><author>Author</author><guid>https://thomasz.me/2022/01/14/a-comparison-of-upscaling-software-in-2021/</guid><description>A few months ago, I started to search for some upscaling software to integrate into Zogwine, my media center with the goal of upscaling some of my old animes either on the fly or via some kind of preprocessing. I found quite a lot of projects on github, and especially the Video2X project which gathered many different projects and versions. So I decided to do a quick benchmark to decide which one to use.</description></item><item><title>Easily create you DIY IoT devices with ESP Home and Home Assistant</title><link>https://thomasz.me/2022/01/14/easily-create-you-diy-iot-devices-with-esp-home-and-home-assistant/</link><pubDate>Fri, 14 Jan 2022 00:00:00 +0100</pubDate><author>Author</author><guid>https://thomasz.me/2022/01/14/easily-create-you-diy-iot-devices-with-esp-home-and-home-assistant/</guid><description>When I started to tinker with home automation and electronics a few years ago, it was common to use arduino cards to create DIY connected devices. You would then communicate with a central server to send and receive information. The communications were usually done using usb, ethernet (using an ethernet shield) or radio (2.4Ghz or 433Mhz) with projects like MySensors.
Most of the time these cards were programmed using the “Arduino language” which is quite close to C++.</description></item><item><title>Control your lights with a Nintendo DS</title><link>https://thomasz.me/2020/11/03/control-your-light-with-a-nintendo-ds/</link><pubDate>Tue, 03 Nov 2020 00:00:00 +0100</pubDate><author>Author</author><guid>https://thomasz.me/2020/11/03/control-your-light-with-a-nintendo-ds/</guid><description>Introduction A few months ago, I stumbled upon the DS Linux project while browsing the internet. The project is not actively developed anymore (which was to expect as the DS is a pretty old device with the first model released in 2004). However, working builds are available on their website here and I wanted to play a bit with it.
Installation According to the project’s website, DS Linux is compatible with the original DS and the DS Lite (this is the one that I own), and maybe the newer models in compatibility mode.</description></item></channel></rss>